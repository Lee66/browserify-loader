{"name":"Browserify-loader","tagline":"A CommonJS Loader for browserify workflow.","body":"browserify-loader\r\n=================\r\n\r\nA CommonJS Loader for browserify workflow.\r\n\r\n\r\n## What is browserify-loader\r\n\r\n`browserify-loader` is another CommonJS loader for  browserify workflow. With BL, You don’t need  any tools  like watchify, browserify-middleware to auto build and serve bundle *js in development env.\r\n\r\n`browserify-loader` is similar  with [requirejs](http://requirejs.org/), but:\r\n\r\n- follow [Modules/1.1.1](http://wiki.commonjs.org/wiki/Modules/1.1.1) like [Node](http://nodejs.org/)\r\n- get rid of wrapper code like `define()`\r\n- be compatible all `npm` package  and  all `bower` components witch support `CommonJS`. like `underscore`, `backbone`, `jQuery` and so on.\r\n\r\n## Getting start\r\n\r\n### install\r\n\r\nDownload `browserify-loader`  with `npm` or  `bower`:\r\n\r\n```bash\r\n$ npm install browserify-loader\r\n```  \r\n\r\nPut  `browserify-loader.js` in your page:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title></title>\r\n</head>\r\n<body>\r\n    <script type=\"text/javascript\"\r\n      src=\"node_modules/browserify-loader/browserify-loader.js\"></script>\r\n</body>\r\n</html>\r\n```\r\n\r\nThen, `browserify-loader` will start to run for `main` file in your `package.json` file.\r\n\r\n### options\r\n\r\n`browserify-loader` has two options to specify the `main` script or `package` location. and browserify-loader supports `coffee-script`.\r\n\r\n```javascript\r\n    <script type=\"text/javascript\"\r\n        id=\"bl-script\"\r\n        main=\"backbone/app.js\"\r\n        package=\"backbone/\"\r\n        extensions=\"js coffee\"\r\n        src=\"node_modules/browserify-loader/browserify-loader.js\"></script>\r\n```\r\n\r\n- **main**: the main entrance script like `app.js` in `node app.js`\r\n-  **package**:  the location where `browserify-loader` to load `package.json`， then get the main entrance from `main` property.\r\n- **extensions**: the extension names of your source code.  `browserify-loader` now supports `.js` and '.coffee'.\r\n\r\n>  **main** 's  priority is higher the **package** 's.\r\n\r\n## example\r\n\r\nLook into [todomvc-in-bl](https://github.com/island205/todomvc-in-bl) , which is a demo project based on [todomvc](https://github.com/tastejs/todomvc) to show how to use `browserify-loader`.\r\n\r\n## performance\r\n\r\n`browserify-loader`'s performance is important, and it is not ideal now yet!\r\n\r\nbrowserify-loader provide  a method to get its performance: `window.define.performance()`\r\n\r\nJust think if there is no browserify-loader, where performance cost come from:\r\n\r\n- script load time\r\n\r\nand then thinking cost in browserify-loader: \r\n\r\n- xhr loading time,  roughly equals script load time\r\n\r\n- define time, concat code, insert script tag and so on\r\n\r\n- analysis module's dependences\r\n\r\n- resolve dependences' uri, include get package.json recursively\r\n\r\n- and so on\r\n\r\n### Now:\r\n\r\n```javascript\r\ndefine + getDeps + resolveDeps / define + getDeps + resolveDeps + load ≈ 0.2 - 0.5\r\nall - load / load ≈ 3 - 5\r\n```\r\n`load` here is just the  xhr loading time (roughly equals script loading time), `all` is the all cost form start loading all modules to done with browserify-loader.\r\n\r\n### Update\r\n\r\n#### 0.2.0\r\n\r\n- support `coffee-script`\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}